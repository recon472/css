(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-6aad6c14"],{"73f4":function(t,e,a){"use strict";var s=a("c48e"),n=a.n(s);n.a},c48e:function(t,e,a){},f362:function(t,e,a){"use strict";a.r(e);var s=function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"v-stack h-stretch"},[a("h1",{staticClass:"h6 text-left"},[t._v("Helpers")]),a("a",{staticClass:"header text-left"},[t._v("Responsive")]),a("p",[t._v(" hide-x classes to not display the element when the width is smaller than the breakpoint ")]),a("prism",{attrs:{language:"scss",code:".hide-sm {  } // small\n.hide-md {  } // medium\n.hide-lg {  } // large\n.hide-xl {  } // extra large"}}),a("p",[t._v(" max-width-x classes to limit the maximum-width to a breakpoint. Works wonders with sections and ma class. ")]),a("prism",{attrs:{language:"scss",code:".max-width-sm {  } // small\n.max-width-md {  } // medium\n.max-width-lg {  } // large\n.max-width-xl {  } // extra large"}}),a("a",{staticClass:"header text-left"},[t._v("Scroll content (overflow)")]),a("p",[t._v(" Make any element scrollable, works best when you put hide-x/y on a parent element and scroll-x/y on the child that should be scrollable (e.g. make table scroll without a header) ")]),a("prism",{attrs:{language:"scss",code:".hide-x {  }\n.hide-y {  }\n.scroll-x {  }\n.scroll-y {  }"}}),a("a",{staticClass:"header text-left"},[t._v("Size")]),a("prism",{attrs:{language:"scss",code:".full-width { width: 100%; }\n.full-height { height: 100%; }"}}),a("a",{staticClass:"header text-left"},[t._v("Margin and Padding")]),a("p",[t._v(" Handful of margin and padding utilities using the step variables. m stands for margin, p for padding. Second letter is for scope: t - top, b - bottom, l - left, r - right, x - left and right, y - top and bottom, a - all. Third letter is dash, you can use n for negative, then a number 0-5. 0 is 0px, the rest corresponds to the appropriate step variable. ")]),a("p",[t._v(" One special margin utility is ma, which stands for margin: auto;. Also mn and pn for margin/padding: 0px;. ")]),a("prism",{attrs:{language:"scss",code:".ma { margin: auto; } // useful for centering text or an element with set width\n.mn { margin: 0px; }\n.pn { margin: 0px; }\n.ma-3 { } // margin on all side of step3\n.px-n2 { } // padding left and right with a negative of step2\n.pt-1 { } // top padding of step1"}})],1)},n=[],i=(a("73f4"),a("2877")),l={},r=Object(i["a"])(l,s,n,!1,null,"5bd5b901",null);e["default"]=r.exports}}]);
//# sourceMappingURL=chunk-6aad6c14.96fb1576.js.map