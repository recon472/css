{"version":3,"sources":["webpack:///./src/html.js","webpack:///./node_modules/core-js/internals/regexp-exec-abstract.js","webpack:///./node_modules/xml-parser-xo/index.js","webpack:///./node_modules/core-js/internals/is-regexp.js","webpack:///./node_modules/core-js/modules/es.regexp.constructor.js","webpack:///./node_modules/core-js/modules/es.string.replace.js","webpack:///./node_modules/core-js/internals/inherit-if-required.js","webpack:///./node_modules/core-js/internals/advance-string-index.js","webpack:///./node_modules/core-js/internals/regexp-exec.js","webpack:///./node_modules/core-js/internals/regexp-sticky-helpers.js","webpack:///./node_modules/core-js/modules/es.regexp.exec.js","webpack:///./node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","webpack:///./node_modules/xml-formatter/index.js"],"names":["format","require","module","exports","object","reference","text","html","$refs","innerHTML","toString","regExp","RegExp","replace","collapseContent","whiteSpaceAtEndOfSelfclosingTag","classof","regexpExec","R","S","exec","result","call","TypeError","parse","xml","options","nextChild","tag","content","comment","cdata","nextRootChild","match","doctype","processingInstruction","document","decl","declaration","children","documentRootNode","child","node","type","Error","excluded","push","root","matchDeclaration","m","name","attributes","eos","is","attr","attribute","value","filter","matchRoot","strip","val","re","slice","length","prefix","indexOf","trim","isObject","wellKnownSymbol","MATCH","it","isRegExp","undefined","DESCRIPTORS","global","isForced","inheritIfRequired","defineProperty","f","getOwnPropertyNames","getFlags","stickyHelpers","redefine","fails","setInternalState","set","setSpecies","NativeRegExp","RegExpPrototype","prototype","re1","re2","CORRECT_NEW","UNSUPPORTED_Y","FORCED","RegExpWrapper","pattern","flags","sticky","thisIsRegExp","this","patternIsRegExp","flagsAreUndefined","constructor","source","proxy","key","configurable","get","keys","index","fixRegExpWellKnownSymbolLogic","anObject","toObject","toLength","toInteger","requireObjectCoercible","advanceStringIndex","regExpExec","max","Math","min","floor","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","maybeToString","String","REPLACE","nativeReplace","maybeCallNative","reason","REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE","REPLACE_KEEPS_$0","UNSAFE_SUBSTITUTE","searchValue","replaceValue","O","replacer","regexp","res","done","rx","functionalReplace","fullUnicode","unicode","lastIndex","results","matchStr","accumulatedResult","nextSourcePosition","i","matched","position","captures","j","namedCaptures","groups","replacerArgs","concat","replacement","apply","getSubstitution","str","tailPos","symbols","ch","capture","charAt","n","setPrototypeOf","$this","dummy","Wrapper","NewTarget","NewTargetPrototype","regexpFlags","nativeExec","patchedExec","UPDATES_LAST_INDEX_WRONG","BROKEN_CARET","NPCG_INCLUDED","PATCH","reCopy","charsAdded","strCopy","multiline","input","arguments","RE","s","$","target","proto","forced","createNonEnumerableProperty","SPECIES","REPLACE_SUPPORTS_NAMED_GROUPS","a","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","originalExec","split","KEY","sham","SYMBOL","DELEGATES_TO_SYMBOL","DELEGATES_TO_EXEC","execCalled","nativeRegExpMethod","methods","nativeMethod","arg2","forceStringMethod","stringMethod","regexMethod","string","arg","newLine","state","lineSeparator","level","indentation","appendContent","processNode","preserveSpace","processContentNode","processElementNode","processProcessingIntruction","processAttributes","selfClosingNodeClosingTag","nodePreserveSpace","containsTextNodes","some","forEach","Object","escaped","parser","parsedXml"],"mappings":"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","file":"js/chunk-330b526f.453e8f66.js","sourcesContent":["const format = require(\"xml-formatter\");\n\nmodule.exports = (object, reference, text = null) => {\n    let html = text\n    if (html == null) {\n        html = object.$refs[reference].innerHTML.toString();\n    }\n    // eslint-disable-next-line\n    let regExp = new RegExp(/data-v-\\d+=\"\"/g)\n    html = html.replace(regExp, '')\n    // eslint-disable-next-line\n    regExp = new RegExp(/<input.+?[^>]*/g)\n    html = html.replace(regExp, '$& /')\n    return format(\"<root>\" + html + \"</root>\", {\n        collapseContent: true,\n        whiteSpaceAtEndOfSelfclosingTag: true\n    });\n}","var classof = require('./classof-raw');\nvar regexpExec = require('./regexp-exec');\n\n// `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n\n  if (classof(R) !== 'RegExp') {\n    throw TypeError('RegExp#exec called on incompatible receiver');\n  }\n\n  return regexpExec.call(R, S);\n};\n\n","/**\n * @typedef {Object} ParsingOptions\n *  @property {function(node)} filter Returns false to exclude a node. Default is true.\n */\n\n/**\n * Parse the given XML string into an object.\n *\n * @param {String} xml\n * @param {ParsingOptions} [options]\n * @return {Object}\n * @api public\n */\nfunction parse(xml, options = {}) {\n\n    options.filter = options.filter || (() => true);\n\n    function nextChild() {\n        return tag() || content() || comment() || cdata();\n    }\n\n    function nextRootChild() {\n        match(/\\s*/);\n        return tag(true) || comment() || doctype() || processingInstruction(false);\n    }\n\n    function document() {\n        const decl = declaration();\n        const children = [];\n        let documentRootNode;\n        let child = nextRootChild();\n\n        while (child) {\n            if (child.node.type === 'Element') {\n                if (documentRootNode) {\n                    throw new Error('Found multiple root nodes');\n                }\n                documentRootNode = child.node;\n            }\n\n            if (!child.excluded) {\n                children.push(child.node);\n            }\n\n            child = nextRootChild();\n        }\n\n        if (!documentRootNode) {\n            throw new Error('Failed to parse XML');\n        }\n\n        return {\n            declaration: decl ? decl.node : null,\n            root: documentRootNode,\n            children\n        };\n    }\n\n    function declaration() {\n        return processingInstruction(true);\n    }\n\n    function processingInstruction(matchDeclaration) {\n        const m = matchDeclaration ? match(/^<\\?(xml)\\s*/) : match(/^<\\?([\\w-:.]+)\\s*/);\n        if (!m) return;\n\n        // tag\n        const node = {\n            name: m[1],\n            type: 'ProcessingInstruction',\n            attributes: {}\n        };\n\n        // attributes\n        while (!(eos() || is('?>'))) {\n            const attr = attribute();\n            if (!attr) return node;\n            node.attributes[attr.name] = attr.value;\n        }\n\n        match(/\\?>/);\n\n        return {\n            excluded: matchDeclaration ? false : options.filter(node) === false,\n            node\n        };\n    }\n\n    function tag(matchRoot) {\n        const m = match(/^<([\\w-:.]+)\\s*/);\n        if (!m) return;\n\n        // name\n        const node = {\n            type: 'Element',\n            name: m[1],\n            attributes: {},\n            children: []\n        };\n\n        // attributes\n        while (!(eos() || is('>') || is('?>') || is('/>'))) {\n            const attr = attribute();\n            if (!attr) return node;\n            node.attributes[attr.name] = attr.value;\n        }\n\n        const excluded = matchRoot ? false : options.filter(node) === false;\n\n        // self closing tag\n        if (match(/^\\s*\\/>/)) {\n            node.children = null;\n            return {\n                excluded,\n                node\n            };\n        }\n\n        match(/\\??>/);\n\n        if (!excluded) {\n            // children\n            let child = nextChild();\n            while (child) {\n                if (!child.excluded) {\n                    node.children.push(child.node);\n                }\n                child = nextChild();\n            }\n        }\n\n        // closing\n        match(/^<\\/[\\w-:.]+>/);\n\n        return {\n            excluded,\n            node\n        };\n    }\n\n    function doctype() {\n        const m = match(/^<!DOCTYPE\\s+[^>]*>/);\n        if (m) {\n            const node = {\n                type: 'DocumentType',\n                content: m[0]\n            };\n            return {\n                excluded: options.filter(node) === false,\n                node\n            };\n        }\n    }\n\n    function cdata() {\n        const m = match(/^<!\\[CDATA\\[[^\\]\\]>]*]]>/);\n        if (m) {\n            const node = {\n                type: 'CDATA',\n                content: m[0]\n            };\n            return {\n                excluded: options.filter(node) === false,\n                node\n            };\n        }\n    }\n\n    function comment() {\n        const m = match(/^<!--[\\s\\S]*?-->/);\n        if (m) {\n            const node = {\n                type: 'Comment',\n                content: m[0]\n            };\n            return {\n                excluded: options.filter(node) === false,\n                node\n            };\n        }\n    }\n\n    function content() {\n        const m = match(/^([^<]+)/);\n        if (m) {\n            const node = {\n                type: 'Text',\n                content: m[1]\n            };\n            return {\n                excluded: options.filter(node) === false,\n                node\n            };\n        }\n    }\n\n    function attribute() {\n        const m = match(/([\\w:-]+)\\s*=\\s*(\"[^\"]*\"|'[^']*'|\\w+)\\s*/);\n        if (!m) return;\n        return {name: m[1], value: strip(m[2])}\n    }\n\n    /**\n     * Strip quotes from `val`.\n     */\n    function strip(val) {\n        return val.replace(/^['\"]|['\"]$/g, '');\n    }\n\n    /**\n     * Match `re` and advance the string.\n     */\n    function match(re) {\n        const m = xml.match(re);\n        if (!m) return;\n        xml = xml.slice(m[0].length);\n        return m;\n    }\n\n    /**\n     * End-of-source.\n     */\n    function eos() {\n        return 0 === xml.length;\n    }\n\n    /**\n     * Check for `prefix`.\n     */\n    function is(prefix) {\n        return 0 === xml.indexOf(prefix);\n    }\n\n    xml = xml.trim();\n\n    return document();\n}\n\nmodule.exports = parse;\n","var isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.github.io/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar defineProperty = require('../internals/object-define-property').f;\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar isRegExp = require('../internals/is-regexp');\nvar getFlags = require('../internals/regexp-flags');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar setInternalState = require('../internals/internal-state').set;\nvar setSpecies = require('../internals/set-species');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\nvar NativeRegExp = global.RegExp;\nvar RegExpPrototype = NativeRegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n\n// \"new\" should create a new object, old webkit bug\nvar CORRECT_NEW = new NativeRegExp(re1) !== re1;\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\n\nvar FORCED = DESCRIPTORS && isForced('RegExp', (!CORRECT_NEW || UNSUPPORTED_Y || fails(function () {\n  re2[MATCH] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';\n})));\n\n// `RegExp` constructor\n// https://tc39.github.io/ecma262/#sec-regexp-constructor\nif (FORCED) {\n  var RegExpWrapper = function RegExp(pattern, flags) {\n    var thisIsRegExp = this instanceof RegExpWrapper;\n    var patternIsRegExp = isRegExp(pattern);\n    var flagsAreUndefined = flags === undefined;\n    var sticky;\n\n    if (!thisIsRegExp && patternIsRegExp && pattern.constructor === RegExpWrapper && flagsAreUndefined) {\n      return pattern;\n    }\n\n    if (CORRECT_NEW) {\n      if (patternIsRegExp && !flagsAreUndefined) pattern = pattern.source;\n    } else if (pattern instanceof RegExpWrapper) {\n      if (flagsAreUndefined) flags = getFlags.call(pattern);\n      pattern = pattern.source;\n    }\n\n    if (UNSUPPORTED_Y) {\n      sticky = !!flags && flags.indexOf('y') > -1;\n      if (sticky) flags = flags.replace(/y/g, '');\n    }\n\n    var result = inheritIfRequired(\n      CORRECT_NEW ? new NativeRegExp(pattern, flags) : NativeRegExp(pattern, flags),\n      thisIsRegExp ? this : RegExpPrototype,\n      RegExpWrapper\n    );\n\n    if (UNSUPPORTED_Y && sticky) setInternalState(result, { sticky: sticky });\n\n    return result;\n  };\n  var proxy = function (key) {\n    key in RegExpWrapper || defineProperty(RegExpWrapper, key, {\n      configurable: true,\n      get: function () { return NativeRegExp[key]; },\n      set: function (it) { NativeRegExp[key] = it; }\n    });\n  };\n  var keys = getOwnPropertyNames(NativeRegExp);\n  var index = 0;\n  while (keys.length > index) proxy(keys[index++]);\n  RegExpPrototype.constructor = RegExpWrapper;\n  RegExpWrapper.prototype = RegExpPrototype;\n  redefine(global, 'RegExp', RegExpWrapper);\n}\n\n// https://tc39.github.io/ecma262/#sec-get-regexp-@@species\nsetSpecies('RegExp');\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative, reason) {\n  var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;\n  var REPLACE_KEEPS_$0 = reason.REPLACE_KEEPS_$0;\n  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\n\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return replacer !== undefined\n        ? replacer.call(searchValue, O, replaceValue)\n        : nativeReplace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      if (\n        (!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE && REPLACE_KEEPS_$0) ||\n        (typeof replaceValue === 'string' && replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1)\n      ) {\n        var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);\n        if (res.done) return res.value;\n      }\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        results.push(result);\n        if (!global) break;\n\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n  // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return nativeReplace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n","var isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    typeof (NewTarget = dummy.constructor) == 'function' &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\n\n// `AdvanceStringIndex` abstract operation\n// https://tc39.github.io/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? charAt(S, index).length : 1);\n};\n","'use strict';\nvar regexpFlags = require('./regexp-flags');\nvar stickyHelpers = require('./regexp-sticky-helpers');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n    var sticky = UNSUPPORTED_Y && re.sticky;\n    var flags = regexpFlags.call(re);\n    var source = re.source;\n    var charsAdded = 0;\n    var strCopy = str;\n\n    if (sticky) {\n      flags = flags.replace('y', '');\n      if (flags.indexOf('g') === -1) {\n        flags += 'g';\n      }\n\n      strCopy = String(str).slice(re.lastIndex);\n      // Support anchored sticky behavior.\n      if (re.lastIndex > 0 && (!re.multiline || re.multiline && str[re.lastIndex - 1] !== '\\n')) {\n        source = '(?: ' + source + ')';\n        strCopy = ' ' + strCopy;\n        charsAdded++;\n      }\n      // ^(? + rx + ) is needed, in combination with some str slicing, to\n      // simulate the 'y' flag.\n      reCopy = new RegExp('^(?:' + source + ')', flags);\n    }\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = nativeExec.call(sticky ? reCopy : re, strCopy);\n\n    if (sticky) {\n      if (match) {\n        match.input = match.input.slice(charsAdded);\n        match[0] = match[0].slice(charsAdded);\n        match.index = re.lastIndex;\n        re.lastIndex += match[0].length;\n      } else re.lastIndex = 0;\n    } else if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","'use strict';\n\nvar fails = require('./fails');\n\n// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,\n// so we use an intermediate function.\nfunction RE(s, f) {\n  return RegExp(s, f);\n}\n\nexports.UNSUPPORTED_Y = fails(function () {\n  // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError\n  var re = RE('a', 'y');\n  re.lastIndex = 2;\n  return re.exec('abcd') != null;\n});\n\nexports.BROKEN_CARET = fails(function () {\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687\n  var re = RE('^r', 'gy');\n  re.lastIndex = 2;\n  return re.exec('str') != null;\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar exec = require('../internals/regexp-exec');\n\n$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {\n  exec: exec\n});\n","'use strict';\n// TODO: Remove from `core-js@4` since it's moved to entry points\nrequire('../modules/es.regexp.exec');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar regexpExec = require('../internals/regexp-exec');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar SPECIES = wellKnownSymbol('species');\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  // #replace needs built-in support for named groups.\n  // #match works fine because it just return the exec results, even if it has\n  // a \"grops\" property.\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  return ''.replace(re, '$<a>') !== '7';\n});\n\n// IE <= 11 replaces $0 with the whole match, as if it was $&\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\nvar REPLACE_KEEPS_$0 = (function () {\n  return 'a'.replace(/./, '$0') === '$0';\n})();\n\nvar REPLACE = wellKnownSymbol('replace');\n// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {\n  if (/./[REPLACE]) {\n    return /./[REPLACE]('a', '$0') === '';\n  }\n  return false;\n})();\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\nmodule.exports = function (KEY, length, exec, sham) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n\n    if (KEY === 'split') {\n      // We can't use real regex here since it causes deoptimization\n      // and serious performance degradation in V8\n      // https://github.com/zloirock/core-js/issues/306\n      re = {};\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n      re.flags = '';\n      re[SYMBOL] = /./[SYMBOL];\n    }\n\n    re.exec = function () { execCalled = true; return null; };\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    (KEY === 'replace' && !(\n      REPLACE_SUPPORTS_NAMED_GROUPS &&\n      REPLACE_KEEPS_$0 &&\n      !REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    )) ||\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      if (regexp.exec === regexpExec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n        }\n        return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n      }\n      return { done: false };\n    }, {\n      REPLACE_KEEPS_$0: REPLACE_KEEPS_$0,\n      REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    });\n    var stringMethod = methods[0];\n    var regexMethod = methods[1];\n\n    redefine(String.prototype, KEY, stringMethod);\n    redefine(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return regexMethod.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return regexMethod.call(string, this); }\n    );\n  }\n\n  if (sham) createNonEnumerableProperty(RegExp.prototype[SYMBOL], 'sham', true);\n};\n","/**\n * @typedef {Object} XMLFormatterOptions\n *  @property {String} [indentation='    '] The value used for indentation\n *  @property {function(node): boolean} [filter] Return false to exclude the node.\n *  @property {Boolean} [collapseContent=false] True to keep content in the same line as the element. Only works if element contains at least one text node\n *  @property {String} [lineSeparator='\\r\\n'] The line separator to use\n *  @property {String} [whiteSpaceAtEndOfSelfclosingTag=false] to either end ad self closing tag with `<tag/>` or `<tag />`\n */\n\n/**\n * @typedef {Object} XMLFormatterState\n * @param {String} content\n * @param {Number} level\n * @param {XMLFormatterOptions} options\n */\n\n/**\n * @param {XMLFormatterState} state\n * @return {void}\n */\nfunction newLine(state) {\n    state.content += state.options.lineSeparator;\n    let i;\n    for (i = 0; i < state.level; i++) {\n        state.content += state.options.indentation;\n    }\n}\n\n/**\n * @param {XMLFormatterState} state\n * @param {String} content\n * @return {void}\n */\nfunction appendContent(state, content) {\n    state.content += content;\n}\n\n/**\n * @param {Object} node\n * @param {XMLFormatterState} state\n * @param {Boolean} preserveSpace\n * @return {void}\n */\nfunction processNode(node, state, preserveSpace) {\n    if (typeof node.content === 'string') {\n        processContentNode(node, state, preserveSpace);\n    } else if (node.type === 'Element') {\n        processElementNode(node, state, preserveSpace);\n    } else if (node.type === 'ProcessingInstruction') {\n        processProcessingIntruction(node, state, preserveSpace);\n    } else {\n        throw new Error('Unknown node type: ' + node.type);\n    }\n}\n\n/**\n * @param {Object} node\n * @param {XMLFormatterState} state\n * @param {Boolean} preserveSpace\n * @return {void}\n */\nfunction processContentNode(node, state, preserveSpace) {\n    if (!preserveSpace) {\n        node.content = node.content.trim();\n    }\n    if (node.content.length > 0) {\n        if (!preserveSpace && state.content.length > 0) {\n            newLine(state);\n        }\n        appendContent(state, node.content);\n    }\n}\n\n/**\n * @param {Object} node\n * @param {XMLFormatterState} state\n * @param {Boolean} preserveSpace\n * @return {void}\n */\nfunction processElementNode(node, state, preserveSpace) {\n    if (!preserveSpace && state.content.length > 0) {\n        newLine(state);\n    }\n\n    appendContent(state, '<' + node.name);\n    processAttributes(state, node.attributes);\n\n    if (node.children === null) {\n        const selfClosingNodeClosingTag = state.options.whiteSpaceAtEndOfSelfclosingTag ? ' />' : '/>'\n        // self-closing node\n        appendContent(state, selfClosingNodeClosingTag);\n    } else if (node.children.length === 0) {\n        // empty node\n        appendContent(state, '></' + node.name + '>');\n    } else {\n\n        appendContent(state, '>');\n\n        state.level++;\n\n        let nodePreserveSpace = node.attributes['xml:space'] === 'preserve';\n\n        if (!nodePreserveSpace && state.options.collapseContent) {\n\n            const containsTextNodes = node.children.some(function(child) {\n                return child.type === 'Text' && child.content.trim() !== '';\n            });\n\n            if (containsTextNodes) {\n                nodePreserveSpace = true;\n            }\n        }\n\n        node.children.forEach(function(child) {\n            processNode(child, state, preserveSpace || nodePreserveSpace, state.options);\n        });\n\n        state.level--;\n\n        if (!preserveSpace && !nodePreserveSpace) {\n            newLine(state);\n        }\n        appendContent(state, '</' + node.name + '>');\n    }\n}\n\n/**\n * @param {XMLFormatterState} state\n * @param {Record<String, String>} attributes\n * @return {void}\n */\nfunction processAttributes(state, attributes) {\n    Object.keys(attributes).forEach(function(attr) {\n        const escaped = attributes[attr].replace(/\"/g, '&quot;');\n        appendContent(state, ' ' + attr + '=\"' + escaped + '\"');\n    });\n}\n\n/**\n * @param {Object} node\n * @param {XMLFormatterState} state\n * @return {void}\n */\nfunction processProcessingIntruction(node, state) {\n    if (state.content.length > 0) {\n        newLine(state);\n    }\n    appendContent(state, '<?' + node.name);\n    processAttributes(state, node.attributes);\n    appendContent(state, '?>');\n}\n\n\n/**\n * Converts the given XML into human readable format.\n *\n * @param {String} xml\n * @param {XMLFormatterOptions} options\n * @returns {string}\n */\nfunction format(xml, options = {}) {\n    options.indentation = options.indentation || '    ';\n    options.collapseContent = options.collapseContent === true;\n    options.lineSeparator = options.lineSeparator || '\\r\\n';\n    options.whiteSpaceAtEndOfSelfclosingTag = !!options.whiteSpaceAtEndOfSelfclosingTag;\n\n    const parser = require('xml-parser-xo');\n    const parsedXml = parser(xml, {filter: options.filter});\n    const state = {content: '', level: 0, options: options};\n\n    if (parsedXml.declaration) {\n        processProcessingIntruction(parsedXml.declaration, state);\n    }\n\n    parsedXml.children.forEach(function(child) {\n        processNode(child, state, false);\n    });\n\n    return state.content;\n}\n\n\nmodule.exports = format;\n"],"sourceRoot":""}